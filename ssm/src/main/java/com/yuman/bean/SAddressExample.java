package com.yuman.bean;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class SAddressExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    public SAddressExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(BigDecimal value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(BigDecimal value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(BigDecimal value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(BigDecimal value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<BigDecimal> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<BigDecimal> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRNameIsNull() {
            addCriterion("R_NAME is null");
            return (Criteria) this;
        }

        public Criteria andRNameIsNotNull() {
            addCriterion("R_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andRNameEqualTo(String value) {
            addCriterion("R_NAME =", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameNotEqualTo(String value) {
            addCriterion("R_NAME <>", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameGreaterThan(String value) {
            addCriterion("R_NAME >", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameGreaterThanOrEqualTo(String value) {
            addCriterion("R_NAME >=", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameLessThan(String value) {
            addCriterion("R_NAME <", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameLessThanOrEqualTo(String value) {
            addCriterion("R_NAME <=", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameLike(String value) {
            addCriterion("R_NAME like", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameNotLike(String value) {
            addCriterion("R_NAME not like", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameIn(List<String> values) {
            addCriterion("R_NAME in", values, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameNotIn(List<String> values) {
            addCriterion("R_NAME not in", values, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameBetween(String value1, String value2) {
            addCriterion("R_NAME between", value1, value2, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameNotBetween(String value1, String value2) {
            addCriterion("R_NAME not between", value1, value2, "rName");
            return (Criteria) this;
        }

        public Criteria andRPhoneIsNull() {
            addCriterion("R_PHONE is null");
            return (Criteria) this;
        }

        public Criteria andRPhoneIsNotNull() {
            addCriterion("R_PHONE is not null");
            return (Criteria) this;
        }

        public Criteria andRPhoneEqualTo(String value) {
            addCriterion("R_PHONE =", value, "rPhone");
            return (Criteria) this;
        }

        public Criteria andRPhoneNotEqualTo(String value) {
            addCriterion("R_PHONE <>", value, "rPhone");
            return (Criteria) this;
        }

        public Criteria andRPhoneGreaterThan(String value) {
            addCriterion("R_PHONE >", value, "rPhone");
            return (Criteria) this;
        }

        public Criteria andRPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("R_PHONE >=", value, "rPhone");
            return (Criteria) this;
        }

        public Criteria andRPhoneLessThan(String value) {
            addCriterion("R_PHONE <", value, "rPhone");
            return (Criteria) this;
        }

        public Criteria andRPhoneLessThanOrEqualTo(String value) {
            addCriterion("R_PHONE <=", value, "rPhone");
            return (Criteria) this;
        }

        public Criteria andRPhoneLike(String value) {
            addCriterion("R_PHONE like", value, "rPhone");
            return (Criteria) this;
        }

        public Criteria andRPhoneNotLike(String value) {
            addCriterion("R_PHONE not like", value, "rPhone");
            return (Criteria) this;
        }

        public Criteria andRPhoneIn(List<String> values) {
            addCriterion("R_PHONE in", values, "rPhone");
            return (Criteria) this;
        }

        public Criteria andRPhoneNotIn(List<String> values) {
            addCriterion("R_PHONE not in", values, "rPhone");
            return (Criteria) this;
        }

        public Criteria andRPhoneBetween(String value1, String value2) {
            addCriterion("R_PHONE between", value1, value2, "rPhone");
            return (Criteria) this;
        }

        public Criteria andRPhoneNotBetween(String value1, String value2) {
            addCriterion("R_PHONE not between", value1, value2, "rPhone");
            return (Criteria) this;
        }

        public Criteria andZipIsNull() {
            addCriterion("ZIP is null");
            return (Criteria) this;
        }

        public Criteria andZipIsNotNull() {
            addCriterion("ZIP is not null");
            return (Criteria) this;
        }

        public Criteria andZipEqualTo(String value) {
            addCriterion("ZIP =", value, "zip");
            return (Criteria) this;
        }

        public Criteria andZipNotEqualTo(String value) {
            addCriterion("ZIP <>", value, "zip");
            return (Criteria) this;
        }

        public Criteria andZipGreaterThan(String value) {
            addCriterion("ZIP >", value, "zip");
            return (Criteria) this;
        }

        public Criteria andZipGreaterThanOrEqualTo(String value) {
            addCriterion("ZIP >=", value, "zip");
            return (Criteria) this;
        }

        public Criteria andZipLessThan(String value) {
            addCriterion("ZIP <", value, "zip");
            return (Criteria) this;
        }

        public Criteria andZipLessThanOrEqualTo(String value) {
            addCriterion("ZIP <=", value, "zip");
            return (Criteria) this;
        }

        public Criteria andZipLike(String value) {
            addCriterion("ZIP like", value, "zip");
            return (Criteria) this;
        }

        public Criteria andZipNotLike(String value) {
            addCriterion("ZIP not like", value, "zip");
            return (Criteria) this;
        }

        public Criteria andZipIn(List<String> values) {
            addCriterion("ZIP in", values, "zip");
            return (Criteria) this;
        }

        public Criteria andZipNotIn(List<String> values) {
            addCriterion("ZIP not in", values, "zip");
            return (Criteria) this;
        }

        public Criteria andZipBetween(String value1, String value2) {
            addCriterion("ZIP between", value1, value2, "zip");
            return (Criteria) this;
        }

        public Criteria andZipNotBetween(String value1, String value2) {
            addCriterion("ZIP not between", value1, value2, "zip");
            return (Criteria) this;
        }

        public Criteria andRAddressIsNull() {
            addCriterion("R_ADDRESS is null");
            return (Criteria) this;
        }

        public Criteria andRAddressIsNotNull() {
            addCriterion("R_ADDRESS is not null");
            return (Criteria) this;
        }

        public Criteria andRAddressEqualTo(String value) {
            addCriterion("R_ADDRESS =", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotEqualTo(String value) {
            addCriterion("R_ADDRESS <>", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressGreaterThan(String value) {
            addCriterion("R_ADDRESS >", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressGreaterThanOrEqualTo(String value) {
            addCriterion("R_ADDRESS >=", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressLessThan(String value) {
            addCriterion("R_ADDRESS <", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressLessThanOrEqualTo(String value) {
            addCriterion("R_ADDRESS <=", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressLike(String value) {
            addCriterion("R_ADDRESS like", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotLike(String value) {
            addCriterion("R_ADDRESS not like", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressIn(List<String> values) {
            addCriterion("R_ADDRESS in", values, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotIn(List<String> values) {
            addCriterion("R_ADDRESS not in", values, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressBetween(String value1, String value2) {
            addCriterion("R_ADDRESS between", value1, value2, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotBetween(String value1, String value2) {
            addCriterion("R_ADDRESS not between", value1, value2, "rAddress");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(BigDecimal value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(BigDecimal value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(BigDecimal value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(BigDecimal value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<BigDecimal> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<BigDecimal> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table S_ADDRESS
     *
     * @mbg.generated do_not_delete_during_merge Sun May 19 20:26:50 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table S_ADDRESS
     *
     * @mbg.generated Sun May 19 20:26:50 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}